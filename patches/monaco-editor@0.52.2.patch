diff --git a/dev/vs/language/typescript/tsWorker.js b/dev/vs/language/typescript/tsWorker.js
index e40fb366e9b3c8974b8c32caad213b246a5069dd..f03b52ca9d0c1334e5a5cfeee30477f6ae6956e4 100644
--- a/dev/vs/language/typescript/tsWorker.js
+++ b/dev/vs/language/typescript/tsWorker.js
@@ -242796,6 +242796,11 @@ type XMLHttpRequestResponseType = "" | "arraybuffer" | "blob" | "document" | "js
     async updateExtraLibs(extraLibs) {
       this._extraLibs = extraLibs;
     }
+  async getEncodedSemanticClassifications(fileName, start, end) {
+    if (fileNameIsLib(fileName)) { return undefined };
+    const span = { start, length: end - start };
+    return this._languageService.getEncodedSemanticClassifications(fileName, span, "2020");
+  }
     async provideInlayHints(fileName, start, end) {
       if (fileNameIsLib(fileName)) {
         return [];
diff --git a/esm/vs/editor/editor.api.d.ts b/esm/vs/editor/editor.api.d.ts
index 6e21bfb0ceac3a097f10ec3a060142b6418782b3..7b0ce695e247df19724e091be443347a4450ffcc 100644
--- a/esm/vs/editor/editor.api.d.ts
+++ b/esm/vs/editor/editor.api.d.ts
@@ -9328,6 +9328,7 @@ export namespace languages.typescript {
          * @param fileName
          * @returns `Promise<typescript.InlayHint[]>`
          */
+getEncodedSemanticClassifications(fileName: string, start: number, end: number): Promise<{spans: number[]}|undefined>;
         provideInlayHints(fileName: string, start: number, end: number): Promise<ReadonlyArray<any>>;
     }
     export const typescriptVersion: string;
diff --git a/esm/vs/language/typescript/ts.worker.js b/esm/vs/language/typescript/ts.worker.js
index cd571071d308d9257dba55aeacc974d716d0b68d..330ef432d71f0a182e14010348e21fce8bb8c6b5 100644
--- a/esm/vs/language/typescript/ts.worker.js
+++ b/esm/vs/language/typescript/ts.worker.js
@@ -242778,6 +242778,11 @@ var TypeScriptWorker = class _TypeScriptWorker {
   async updateExtraLibs(extraLibs) {
     this._extraLibs = extraLibs;
   }
+  async getEncodedSemanticClassifications(fileName, start, end) {
+    if (fileNameIsLib(fileName)) { return undefined };
+    const span = { start, length: end - start };
+    return this._languageService.getEncodedSemanticClassifications(fileName, span, "2020");
+  }
   async provideInlayHints(fileName, start, end) {
     if (fileNameIsLib(fileName)) {
       return [];
diff --git a/min/vs/language/typescript/tsWorker.js b/min/vs/language/typescript/tsWorker.js
index 4c5227ae37823d45d51ab77d020e06b55ea5b9fd..ac12a4e743691b71227a51ccf587282b1fc0e2b6 100644
--- a/min/vs/language/typescript/tsWorker.js
+++ b/min/vs/language/typescript/tsWorker.js
@@ -51309,7 +51309,13 @@ interface WebGLRenderingContextOverloads {
     /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */
     uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;
 }
-`;function fm(yp){return typeof yp=="string"?/^file:\/\/\//.test(yp)?!!Vi[yp.substr(8)]:!1:yp.path.indexOf("/lib.")===0?!!Vi[yp.path.slice(1)]:!1}var H5=class yp{constructor(mi,pt){this._extraLibs=Object.create(null);this._languageService=rve(this);this._ctx=mi,this._compilerOptions=pt.compilerOptions,this._extraLibs=pt.extraLibs,this._inlayHintsOptions=pt.inlayHintsOptions}getCompilationSettings(){return this._compilerOptions}getLanguageService(){return this._languageService}getExtraLibs(){return this._extraLibs}getScriptFileNames(){return this._ctx.getMirrorModels().map(ds=>ds.uri).filter(ds=>!fm(ds)).map(ds=>ds.toString()).concat(Object.keys(this._extraLibs))}_getModel(mi){let pt=this._ctx.getMirrorModels();for(let ds=0;ds<pt.length;ds++){let la=pt[ds].uri;if(la.toString()===mi||la.toString(!0)===mi)return pt[ds]}return null}getScriptVersion(mi){let pt=this._getModel(mi);return pt?pt.version.toString():this.isDefaultLibFileName(mi)?"1":mi in this._extraLibs?String(this._extraLibs[mi].version):""}async getScriptText(mi){return this._getScriptText(mi)}_getScriptText(mi){let pt,ds=this._getModel(mi),la="lib."+mi+".d.ts";if(ds)pt=ds.getValue();else if(mi in Vi)pt=Vi[mi];else if(la in Vi)pt=Vi[la];else if(mi in this._extraLibs)pt=this._extraLibs[mi].content;else return;return pt}getScriptSnapshot(mi){let pt=this._getScriptText(mi);if(pt!==void 0)return{getText:(ds,la)=>pt.substring(ds,la),getLength:()=>pt.length,getChangeRange:()=>{}}}getScriptKind(mi){switch(mi.substr(mi.lastIndexOf(".")+1)){case"ts":return kD.TS;case"tsx":return kD.TSX;case"js":return kD.JS;case"jsx":return kD.JSX;default:return this.getCompilationSettings().allowJs?kD.JS:kD.TS}}getCurrentDirectory(){return""}getDefaultLibFileName(mi){switch(mi.target){case 99:let pt="lib.esnext.full.d.ts";if(pt in Vi||pt in this._extraLibs)return pt;case 7:case 6:case 5:case 4:case 3:case 2:default:let ds=`lib.es${2013+(mi.target||99)}.full.d.ts`;return ds in Vi||ds in this._extraLibs?ds:"lib.es6.d.ts";case 1:case 0:return"lib.d.ts"}}isDefaultLibFileName(mi){return mi===this.getDefaultLibFileName(this._compilerOptions)}readFile(mi){return this._getScriptText(mi)}fileExists(mi){return this._getScriptText(mi)!==void 0}async getLibFiles(){return Vi}static clearFiles(mi){let pt=[];for(let ds of mi){let la={...ds};if(la.file=la.file?{fileName:la.file.fileName}:void 0,ds.relatedInformation){la.relatedInformation=[];for(let jm of ds.relatedInformation){let bp={...jm};bp.file=bp.file?{fileName:bp.file.fileName}:void 0,la.relatedInformation.push(bp)}}pt.push(la)}return pt}async getSyntacticDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getSyntacticDiagnostics(mi);return yp.clearFiles(pt)}async getSemanticDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getSemanticDiagnostics(mi);return yp.clearFiles(pt)}async getSuggestionDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getSuggestionDiagnostics(mi);return yp.clearFiles(pt)}async getCompilerOptionsDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getCompilerOptionsDiagnostics();return yp.clearFiles(pt)}async getCompletionsAtPosition(mi,pt){if(!fm(mi))return this._languageService.getCompletionsAtPosition(mi,pt,void 0)}async getCompletionEntryDetails(mi,pt,ds){return this._languageService.getCompletionEntryDetails(mi,pt,ds,void 0,void 0,void 0,void 0)}async getSignatureHelpItems(mi,pt,ds){if(!fm(mi))return this._languageService.getSignatureHelpItems(mi,pt,ds)}async getQuickInfoAtPosition(mi,pt){if(!fm(mi))return this._languageService.getQuickInfoAtPosition(mi,pt)}async getDocumentHighlights(mi,pt,ds){if(!fm(mi))return this._languageService.getDocumentHighlights(mi,pt,ds)}async getDefinitionAtPosition(mi,pt){if(!fm(mi))return this._languageService.getDefinitionAtPosition(mi,pt)}async getReferencesAtPosition(mi,pt){if(!fm(mi))return this._languageService.getReferencesAtPosition(mi,pt)}async getNavigationTree(mi){if(!fm(mi))return this._languageService.getNavigationTree(mi)}async getFormattingEditsForDocument(mi,pt){return fm(mi)?[]:this._languageService.getFormattingEditsForDocument(mi,pt)}async getFormattingEditsForRange(mi,pt,ds,la){return fm(mi)?[]:this._languageService.getFormattingEditsForRange(mi,pt,ds,la)}async getFormattingEditsAfterKeystroke(mi,pt,ds,la){return fm(mi)?[]:this._languageService.getFormattingEditsAfterKeystroke(mi,pt,ds,la)}async findRenameLocations(mi,pt,ds,la,jm){if(!fm(mi))return this._languageService.findRenameLocations(mi,pt,ds,la,jm)}async getRenameInfo(mi,pt,ds){return fm(mi)?{canRename:!1,localizedErrorMessage:"Cannot rename in lib file"}:this._languageService.getRenameInfo(mi,pt,ds)}async getEmitOutput(mi,pt,ds){if(fm(mi))return{outputFiles:[],emitSkipped:!0};let la=this._languageService.getEmitOutput(mi,pt,ds),jm=la.diagnostics?yp.clearFiles(la.diagnostics):void 0;return{...la,diagnostics:jm}}async getCodeFixesAtPosition(mi,pt,ds,la,jm){if(fm(mi))return[];let bp={};try{return this._languageService.getCodeFixesAtPosition(mi,pt,ds,la,jm,bp)}catch{return[]}}async updateExtraLibs(mi){this._extraLibs=mi}async provideInlayHints(mi,pt,ds){if(fm(mi))return[];let la=this._inlayHintsOptions??{},jm={start:pt,length:ds-pt};try{return this._languageService.provideInlayHints(mi,jm,la)}catch{return[]}}};function nft(yp,mi){let pt=H5;if(mi.customWorkerPath)if(typeof importScripts>"u")console.warn("Monaco is not using webworkers for background tasks, and that is needed to support the customWorkerPath flag");else{self.importScripts(mi.customWorkerPath);let ds=self.customTSWorkerFactory;if(!ds)throw new Error(`The script at ${mi.customWorkerPath} does not add customTSWorkerFactory to self`);pt=ds(H5,ove,Vi)}return new pt(yp,mi)}globalThis.ts=ive;return Kpt(rft);})();
+`;function fm(yp){return typeof yp=="string"?/^file:\/\/\//.test(yp)?!!Vi[yp.substr(8)]:!1:yp.path.indexOf("/lib.")===0?!!Vi[yp.path.slice(1)]:!1}var H5=class yp{constructor(mi,pt){this._extraLibs=Object.create(null);this._languageService=rve(this);this._ctx=mi,this._compilerOptions=pt.compilerOptions,this._extraLibs=pt.extraLibs,this._inlayHintsOptions=pt.inlayHintsOptions}getCompilationSettings(){return this._compilerOptions}getLanguageService(){return this._languageService}getExtraLibs(){return this._extraLibs}getScriptFileNames(){return this._ctx.getMirrorModels().map(ds=>ds.uri).filter(ds=>!fm(ds)).map(ds=>ds.toString()).concat(Object.keys(this._extraLibs))}_getModel(mi){let pt=this._ctx.getMirrorModels();for(let ds=0;ds<pt.length;ds++){let la=pt[ds].uri;if(la.toString()===mi||la.toString(!0)===mi)return pt[ds]}return null}getScriptVersion(mi){let pt=this._getModel(mi);return pt?pt.version.toString():this.isDefaultLibFileName(mi)?"1":mi in this._extraLibs?String(this._extraLibs[mi].version):""}async getScriptText(mi){return this._getScriptText(mi)}_getScriptText(mi){let pt,ds=this._getModel(mi),la="lib."+mi+".d.ts";if(ds)pt=ds.getValue();else if(mi in Vi)pt=Vi[mi];else if(la in Vi)pt=Vi[la];else if(mi in this._extraLibs)pt=this._extraLibs[mi].content;else return;return pt}getScriptSnapshot(mi){let pt=this._getScriptText(mi);if(pt!==void 0)return{getText:(ds,la)=>pt.substring(ds,la),getLength:()=>pt.length,getChangeRange:()=>{}}}getScriptKind(mi){switch(mi.substr(mi.lastIndexOf(".")+1)){case"ts":return kD.TS;case"tsx":return kD.TSX;case"js":return kD.JS;case"jsx":return kD.JSX;default:return this.getCompilationSettings().allowJs?kD.JS:kD.TS}}getCurrentDirectory(){return""}getDefaultLibFileName(mi){switch(mi.target){case 99:let pt="lib.esnext.full.d.ts";if(pt in Vi||pt in this._extraLibs)return pt;case 7:case 6:case 5:case 4:case 3:case 2:default:let ds=`lib.es${2013+(mi.target||99)}.full.d.ts`;return ds in Vi||ds in this._extraLibs?ds:"lib.es6.d.ts";case 1:case 0:return"lib.d.ts"}}isDefaultLibFileName(mi){return mi===this.getDefaultLibFileName(this._compilerOptions)}readFile(mi){return this._getScriptText(mi)}fileExists(mi){return this._getScriptText(mi)!==void 0}async getLibFiles(){return Vi}static clearFiles(mi){let pt=[];for(let ds of mi){let la={...ds};if(la.file=la.file?{fileName:la.file.fileName}:void 0,ds.relatedInformation){la.relatedInformation=[];for(let jm of ds.relatedInformation){let bp={...jm};bp.file=bp.file?{fileName:bp.file.fileName}:void 0,la.relatedInformation.push(bp)}}pt.push(la)}return pt}async getSyntacticDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getSyntacticDiagnostics(mi);return yp.clearFiles(pt)}async getSemanticDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getSemanticDiagnostics(mi);return yp.clearFiles(pt)}async getSuggestionDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getSuggestionDiagnostics(mi);return yp.clearFiles(pt)}async getCompilerOptionsDiagnostics(mi){if(fm(mi))return[];let pt=this._languageService.getCompilerOptionsDiagnostics();return yp.clearFiles(pt)}async getCompletionsAtPosition(mi,pt){if(!fm(mi))return this._languageService.getCompletionsAtPosition(mi,pt,void 0)}async getCompletionEntryDetails(mi,pt,ds){return this._languageService.getCompletionEntryDetails(mi,pt,ds,void 0,void 0,void 0,void 0)}async getSignatureHelpItems(mi,pt,ds){if(!fm(mi))return this._languageService.getSignatureHelpItems(mi,pt,ds)}async getQuickInfoAtPosition(mi,pt){if(!fm(mi))return this._languageService.getQuickInfoAtPosition(mi,pt)}async getDocumentHighlights(mi,pt,ds){if(!fm(mi))return this._languageService.getDocumentHighlights(mi,pt,ds)}async getDefinitionAtPosition(mi,pt){if(!fm(mi))return this._languageService.getDefinitionAtPosition(mi,pt)}async getReferencesAtPosition(mi,pt){if(!fm(mi))return this._languageService.getReferencesAtPosition(mi,pt)}async getNavigationTree(mi){if(!fm(mi))return this._languageService.getNavigationTree(mi)}async getFormattingEditsForDocument(mi,pt){return fm(mi)?[]:this._languageService.getFormattingEditsForDocument(mi,pt)}async getFormattingEditsForRange(mi,pt,ds,la){return fm(mi)?[]:this._languageService.getFormattingEditsForRange(mi,pt,ds,la)}async getFormattingEditsAfterKeystroke(mi,pt,ds,la){return fm(mi)?[]:this._languageService.getFormattingEditsAfterKeystroke(mi,pt,ds,la)}async findRenameLocations(mi,pt,ds,la,jm){if(!fm(mi))return this._languageService.findRenameLocations(mi,pt,ds,la,jm)}async getRenameInfo(mi,pt,ds){return fm(mi)?{canRename:!1,localizedErrorMessage:"Cannot rename in lib file"}:this._languageService.getRenameInfo(mi,pt,ds)}async getEmitOutput(mi,pt,ds){if(fm(mi))return{outputFiles:[],emitSkipped:!0};let la=this._languageService.getEmitOutput(mi,pt,ds),jm=la.diagnostics?yp.clearFiles(la.diagnostics):void 0;return{...la,diagnostics:jm}}async getCodeFixesAtPosition(mi,pt,ds,la,jm){if(fm(mi))return[];let bp={};try{return this._languageService.getCodeFixesAtPosition(mi,pt,ds,la,jm,bp)}catch{return[]}}
+  async getEncodedSemanticClassifications(fileName, start, end) {
+    if (fm(fileName)) { return undefined };
+    const span = { start, length: end - start };
+    return this._languageService.getEncodedSemanticClassifications(fileName, span, "2020");
+  }
+async updateExtraLibs(mi){this._extraLibs=mi}async provideInlayHints(mi,pt,ds){if(fm(mi))return[];let la=this._inlayHintsOptions??{},jm={start:pt,length:ds-pt};try{return this._languageService.provideInlayHints(mi,jm,la)}catch{return[]}}};function nft(yp,mi){let pt=H5;if(mi.customWorkerPath)if(typeof importScripts>"u")console.warn("Monaco is not using webworkers for background tasks, and that is needed to support the customWorkerPath flag");else{self.importScripts(mi.customWorkerPath);let ds=self.customTSWorkerFactory;if(!ds)throw new Error(`The script at ${mi.customWorkerPath} does not add customTSWorkerFactory to self`);pt=ds(H5,ove,Vi)}return new pt(yp,mi)}globalThis.ts=ive;return Kpt(rft);})();
 /*! *****************************************************************************
 Copyright (c) Microsoft Corporation. All rights reserved.
 Licensed under the Apache License, Version 2.0 (the "License"); you may not use
diff --git a/monaco.d.ts b/monaco.d.ts
index de65a4a52dacfd7f6986fb06198e056ab70ab3ef..a009cfc68689abec5c734a5b0ea07a156d2bb968 100644
--- a/monaco.d.ts
+++ b/monaco.d.ts
@@ -9327,6 +9327,7 @@ declare namespace monaco.languages.typescript {
          * @param fileName
          * @returns `Promise<typescript.InlayHint[]>`
          */
+getEncodedSemanticClassifications(fileName: string, start: number, end: number): Promise<{spans: number[]}|undefined>;
         provideInlayHints(fileName: string, start: number, end: number): Promise<ReadonlyArray<any>>;
     }
     export const typescriptVersion: string;
